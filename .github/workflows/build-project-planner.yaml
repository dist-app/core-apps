name: Build 'project-planner'
on:
  push:
    paths:
      - .github/workflows/build-project-planner.yaml
      - project-planner/**

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:

    - uses: actions/checkout@v4

    - name: Use Deno stable
      uses: denoland/setup-deno@v2
      with:
        deno-version: v2.3
    - name: Cache https://
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/deno/remote/https
          ~/.cache/deno/gen/https
        key: deno-https/v2-${{ github.sha }}
        restore-keys: deno-https/v2-
    - name: Install dist-bundle utility
      run: deno install --global --allow-all --no-config https://uber.danopia.net/dist-app-deno/affe913e555847a6c93dc173808fbaf19ae9e90c/cli/dist-bundle/main.ts

    - name: Log into GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: x-access-token
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804
      with:
        images: ghcr.io/dist-app/core-apps/project-planner
        tags: |
          type=sha
          type=ref,event=pr
          type=ref,event=tag
          type=edge,branch=main

    - run: corepack enable
    - name: Get NPM dependencies
      run: yarn install
      working-directory: project-planner

    - name: Build artifact
      id: build
      run: dist-bundle build
      working-directory: project-planner
      env:
        DENO_NO_PACKAGE_JSON: '1' 
        artifact-labels: ${{ steps.meta.outputs.labels }}

    - name: Push artifact
      run: dist-bundle push
      working-directory: project-planner
      env:
        digest: ${{ steps.build.outputs.digest }}
        destinations: ${{ steps.meta.outputs.tags }}
